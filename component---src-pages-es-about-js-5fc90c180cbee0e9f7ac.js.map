{"version":3,"file":"component---src-pages-es-about-js-5fc90c180cbee0e9f7ac.js","mappings":"uJAIA,MAAMA,EAASA,IAEXC,EAAAA,cAAA,UAAQC,GAAG,cACTD,EAAAA,cAAA,OAAKE,UAAU,aACbF,EAAAA,cAACG,EAAAA,KAAI,CAACC,GAAG,KACPJ,EAAAA,cAAA,OAAKC,GAAG,cAAcI,IAAK,yDACzBC,MAAO,IACPC,OAAQ,GACRC,IAAI,iBAoBhB,IAZeC,IAAoC,IAAnC,SAAEC,EAAQ,MAAEC,EAAK,SAAEC,GAAUH,EAC3C,MACMI,EADW,qBACEH,EAASI,SAE5B,OACEd,EAAAA,cAAA,OAAKE,UAAU,iBAAiB,oBAAmBW,IAC/CA,GAAcb,EAAAA,cAACD,EAAM,CAACW,SAAUA,IAClCV,EAAAA,cAAA,QAAME,UAAU,aAAaU,GACzB,C,+CC2BV,IA7CYH,IAAuC,IAADM,EAAAC,EAAAC,EAAA,IAArC,YAAEC,EAAW,MAAEP,EAAK,SAAEC,GAAUH,EAC3C,MAAM,KAAEU,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBH,GAAeC,EAAKG,aAAaJ,YACnDK,EAAgC,QAApBR,EAAGI,EAAKG,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBJ,MAExC,OACEX,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,QAAMwB,KAAK,SAASC,QAAQ,SAC5BzB,EAAAA,cAAA,aAAQuB,EAAe,GAAGZ,OAAWY,IAAiBZ,GACtDX,EAAAA,cAAA,QAAMwB,KAAK,cAAcC,QAASJ,IAClCrB,EAAAA,cAAA,QAAM0B,SAAS,WAAWD,QAASd,IACnCX,EAAAA,cAAA,QAAM0B,SAAS,iBAAiBD,QAASJ,IACzCrB,EAAAA,cAAA,QAAM0B,SAAS,UAAUD,QAAQ,YACjCzB,EAAAA,cAAA,QAAMwB,KAAK,eAAeC,QAAQ,YAClCzB,EAAAA,cAAA,QACEwB,KAAK,kBACLC,SAA0B,QAAjBT,EAAAG,EAAKG,oBAAY,IAAAN,GAAQ,QAARC,EAAjBD,EAAmBW,cAAM,IAAAV,OAAR,EAAjBA,EAA2BW,UAAW,KAEjD5B,EAAAA,cAAA,QAAMwB,KAAK,gBAAgBC,QAASd,IACpCX,EAAAA,cAAA,QAAMwB,KAAK,sBAAsBC,QAASJ,IAG1CrB,EAAAA,cAAA,QAAM6B,IAAI,aAAaC,KAAK,iCAC5B9B,EAAAA,cAAA,QAAM6B,IAAI,aAAaC,KAAK,4BAA4BC,aAAW,IACnE/B,EAAAA,cAAA,QAAM8B,KAAK,0LAA0LD,IAAI,eACxMjB,EACA,C,2GClCP,UAXcH,IAAwB,IAAAuB,EAAA,IAAvB,KAAEC,EAAI,SAAEvB,GAAUD,EACS,QAAtBuB,EAAAC,EAAKd,KAAKG,oBAAY,IAAAU,GAAtBA,EAAwBrB,MAG1C,OACEX,EAAAA,cAAA,YACEA,EAAAA,cAAA,UAAI,mBACC,EAWJ,MAAMkC,EAAOA,IAAMlC,EAAAA,cAACmC,EAAAA,EAAG,CAACxB,MAAM,a","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/es/about.js"],"sourcesContent":["import * as React from \"react\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport { Link } from \"gatsby\"\n\nconst Header = () => {\n  return (\n    <header id=\"page-hader\">\n      <div className=\"container\">\n        <Link to=\"/\">\n          <img id=\"header-logo\" src={`${__PATH_PREFIX__}/img/logo-horizontal-inverse-filled.svg`}\n            width={373}\n            height={38}\n            alt=\"Almotásim\"\n          />\n        </Link>\n      </div>\n    </header>\n  )\n}\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      {!isRootPath && <Header location={location}/>}\n      <main className=\"container\">{children}</main>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <meta name=\"robots\" content=\"none\"></meta>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n\n\n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n      <link href=\"https://fonts.googleapis.com/css2?family=Alegreya+SC:ital,wght@0,400;0,500;0,700;0,800;0,900;1,400;1,500;1,700;1,800;1,900&family=Alegreya:ital,wght@0,400..900;1,400..900&display=swap\" rel=\"stylesheet\" />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../../components/layout\"\nimport Seo from \"../../components/seo\"\n\nconst About = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  // const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <main>\n      <h1>Sobre Almotásim</h1>\n    </main>\n  )\n}\n\nexport default About\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["Header","React","id","className","Link","to","src","width","height","alt","_ref","location","title","children","isRootPath","pathname","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","rel","href","crossorigin","_data$site$siteMetada","data","Head","Seo"],"sourceRoot":""}