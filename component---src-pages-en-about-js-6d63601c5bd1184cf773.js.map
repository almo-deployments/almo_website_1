{"version":3,"file":"component---src-pages-en-about-js-6d63601c5bd1184cf773.js","mappings":"6KAEA,MAAMA,EAAYA,CAACC,EAAUC,KAC3BC,QAAQC,IAAI,CAAEH,aAed,MAdmB,CACjBI,GAAI,CACFC,MAAO,QACPC,KAAM,OACNC,QAAS,UACTC,OAAQ,UAEVC,GAAI,CACFJ,MAAO,QACPC,KAAM,SACNC,QAAS,UACTC,OAAQ,WAGMR,GAAUC,EAAK,EAG5B,SAASS,EAASC,GAAgB,IAAf,SAAEX,GAAUW,EACpC,OAAOC,EAAAA,cAAAA,EAAAA,SAAA,KACS,OAAbZ,EAAoBY,EAAAA,cAAAA,EAAAA,SAAA,KAAEA,EAAAA,cAAA,UAAI,iBAAuBA,EAAAA,cAAAA,EAAAA,SAAA,KAAEA,EAAAA,cAAA,UAAI,aACxDA,EAAAA,cAAA,QAAMC,OAAO,4DAA4DC,OAAO,QAC9EF,EAAAA,cAAA,SAAOG,QAAQ,mBAAmBhB,EAAUC,EAAU,SACtDY,EAAAA,cAAA,SAAOI,GAAG,kBAAkBC,KAAK,OAAOX,KAAK,SAC7CM,EAAAA,cAAA,SAAOG,QAAQ,oBAAoBhB,EAAUC,EAAU,UACvDY,EAAAA,cAAA,SAAOI,GAAG,mBAAmBC,KAAK,QAAQX,KAAK,UAC/CM,EAAAA,cAAA,SAAOG,QAAQ,sBAAsBhB,EAAUC,EAAU,YACzDY,EAAAA,cAAA,YAAUI,GAAG,qBAAqBV,KAAK,YAEvCM,EAAAA,cAAA,UAAQK,KAAK,UAAUlB,EAAUC,EAAU,YAEjD,C,+EClCO,SAASkB,EAAuBC,EAAMC,GAC3C,MAAMC,EAAkC,OAApBD,EAA2B,KAAO,KACtD,OAAOD,EAAKG,QAAQ,IAAIF,KAAoB,IAAIC,KAClD,CCqCA,MAnCmBV,IAA6B,IAA5B,SAAEX,EAAQ,SAAEuB,GAAUZ,EACxC,MAAOa,EAAYC,GAAiBb,EAAAA,UAAe,GACnD,OACEA,EAAAA,cAAA,UAAQI,GAAG,cACTJ,EAAAA,cAAA,OAAKc,UAAU,aACbd,EAAAA,cAACe,EAAAA,KAAI,CAACC,GAAiB,OAAb5B,EAAoB,IAAM,IAAIA,MAAaY,EAAAA,cAAA,OACrDI,GAAG,cAAca,IAAK,uBAClBC,MAAO,IACPC,OAAQ,GACRC,IAAI,eAERpB,EAAAA,cAAA,UAAQI,GAAG,cAAciB,QAASA,IAAMR,GAAcS,IAAUA,KAAQtB,EAAAA,cAAA,OAAKI,GAAG,gBAAgBa,IAAK,gCACrGjB,EAAAA,cAAA,OAAKI,GAAG,kBAAkBU,UAAWF,EAAa,iBAAcW,GAC9DvB,EAAAA,cAAA,OAAKc,UAAU,aACC,OAAb1B,EACCY,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAIA,EAAAA,cAACe,EAAAA,KAAI,CAACC,GAAI,IAAsB5B,eAAsB,aAC1DY,EAAAA,cAAA,UAAIA,EAAAA,cAACe,EAAAA,KAAI,CAACC,GAAI,IAAsB5B,eAAsB,aAE1DY,EAAAA,cAAA,UAAIA,EAAAA,cAACe,EAAAA,KAAI,CAACC,GAAI,IAAsB5B,YAAmB,UACvDY,EAAAA,cAAA,UAAIA,EAAAA,cAACe,EAAAA,KAAI,CAACC,GAAIV,EAAuBK,EAASa,SAAUpC,IAAW,aAC7DY,EAAAA,cAAA,UACNA,EAAAA,cAAA,UAAIA,EAAAA,cAACe,EAAAA,KAAI,CAACC,GAAI,IAAsB5B,eAAsB,cAC1DY,EAAAA,cAAA,UAAIA,EAAAA,cAACe,EAAAA,KAAI,CAACC,GAAI,IAAsB5B,eAAsB,cAE1DY,EAAAA,cAAA,UAAIA,EAAAA,cAACe,EAAAA,KAAI,CAACC,GAAI,IAAsB5B,YAAmB,SACvDY,EAAAA,cAAA,UAAIA,EAAAA,cAACe,EAAAA,KAAI,CAACC,GAAIV,EAAuBK,EAASa,SAAUpC,IAAW,gBAKtE,EClBb,MAZeW,IAA8C,IAA7C,SAAEY,EAAQ,MAAEc,EAAK,SAAEC,EAAQ,SAAEtC,GAAUW,EACrD,MACM4B,EADW,MACEhB,EAASa,SAE5B,OACExB,EAAAA,cAAA,OAAKc,UAAU,iBAAiB,oBAAmBa,IAC/CA,GAAc3B,EAAAA,cAAC4B,EAAU,CAACjB,SAAUA,EAAUvB,SAAUA,IAC1DY,EAAAA,cAAA,QAAMc,UAAU,aAAaY,GACzB,C,+CCiDV,IArDY3B,IAAuC,IAAD8B,EAAAC,EAAAC,EAAA,IAArC,YAAEC,EAAW,MAAEP,EAAK,SAAEC,GAAU3B,EAC3C,MAAM,KAAEkC,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBH,GAAeC,EAAKG,aAAaJ,YACnDK,EAAgC,QAApBR,EAAGI,EAAKG,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBJ,MAExC,OACEzB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,QAAMN,KAAK,SAAS4C,QAAQ,SAC5BtC,EAAAA,cAAA,aAAQqC,EAAe,GAAGZ,OAAWY,IAAiBZ,GACtDzB,EAAAA,cAAA,QAAMN,KAAK,cAAc4C,QAASH,IAClCnC,EAAAA,cAAA,QAAMuC,SAAS,WAAWD,QAASb,IACnCzB,EAAAA,cAAA,QAAMuC,SAAS,iBAAiBD,QAASH,IACzCnC,EAAAA,cAAA,QAAMuC,SAAS,UAAUD,QAAQ,YACjCtC,EAAAA,cAAA,QAAMN,KAAK,eAAe4C,QAAQ,YAClCtC,EAAAA,cAAA,QACEN,KAAK,kBACL4C,SAA0B,QAAjBR,EAAAG,EAAKG,oBAAY,IAAAN,GAAQ,QAARC,EAAjBD,EAAmBU,cAAM,IAAAT,OAAR,EAAjBA,EAA2BU,UAAW,KAEjDzC,EAAAA,cAAA,QAAMN,KAAK,gBAAgB4C,QAASb,IACpCzB,EAAAA,cAAA,QAAMN,KAAK,sBAAsB4C,QAASH,IAG1CnC,EAAAA,cAAA,QAAM0C,IAAI,aAAaC,KAAK,iCAC5B3C,EAAAA,cAAA,QAAM0C,IAAI,aAAaC,KAAK,4BAA4BC,YAAY,cACpE5C,EAAAA,cAAA,QAAM2C,KAAK,mJAAmJD,IAAI,eASjKhB,EACA,C,uHCxBP,UA3Bc3B,IAAyB,IAAD8C,EAAA,IAAvB,KAAEC,EAAI,SAAEnC,GAAUZ,EAC/B,MACMgD,GAAkC,QAAtBF,EAAAC,EAAKb,KAAKG,oBAAY,IAAAS,OAAA,EAAtBA,EAAwBpB,QAAS,QAEnD,OACEzB,EAAAA,cAACgD,EAAAA,EAAM,CAACrC,SAAUA,EAAUc,MAAOsB,EAAW3D,SAJ/B,MAKbY,EAAAA,cAAA,UAAQI,GAAG,sBACTJ,EAAAA,cAAA,UAAI,oBAENA,EAAAA,cAAA,SAAGA,EAAAA,cAAA,SAAG,aAAa,oLAEnBA,EAAAA,cAAA,SAAGA,EAAAA,cAAA,SAAG,aAAa,eAAYA,EAAAA,cAAA,KAAG2C,KAAK,4BAA4BM,OAAO,UAAS,kBAAmB,4DAEtGjD,EAAAA,cAAA,SAAG,kBAEHA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,6FACJA,EAAAA,cAAA,UAAI,6FACJA,EAAAA,cAAA,UAAI,yDACJA,EAAAA,cAAA,UAAI,0BAGNA,EAAAA,cAACF,EAAAA,EAAS,CAACV,SArBE,OAsBL,EAMP,MAAM8D,EAAOA,IAAMlD,EAAAA,cAAAA,EAAAA,SAAA,KACxBA,EAAAA,cAAA,QAAMN,KAAK,WAAW4C,QAAQ,eAC9BtC,EAAAA,cAACmD,EAAAA,EAAG,CAAC1B,MAAM,c","sources":["webpack://gatsby-starter-blog/./src/components/AboutForm.js","webpack://gatsby-starter-blog/./src/components/languageHelpers.js","webpack://gatsby-starter-blog/./src/components/PageHeader.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/en/about.js"],"sourcesContent":["import * as React from \"react\"\n\nconst translate = (language, text) => {\n  console.log({ language })\n  const dictionary = {\n    en: {\n      email: 'Email',\n      name: 'Name',\n      message: 'Message',\n      submit: 'Submit'\n    },\n    es: {\n      email: 'Email',\n      name: 'Nombre',\n      message: 'Mensaje',\n      submit: 'Enviar'\n    },\n  }\n  return dictionary[language][text];\n}\n\nexport function AboutForm({ language }) {\n  return <>\n    {language === 'en' ? <><h2>Get in touch</h2></> : <><h2>Contacto</h2></>}\n    <form action=\"https://send.pageclip.co/W40ge79T0jJ4OONgvv22RSwaS6NMiEbt\" method=\"post\">\n      <label htmlFor=\"about-form-name\">{translate(language, 'name')}</label>\n      <input id=\"about-form-name\" type=\"text\" name=\"name\" />\n      <label htmlFor=\"about-form-email\">{translate(language, 'email')}</label>\n      <input id=\"about-form-email\" type=\"email\" name=\"email\" />\n      <label htmlFor=\"about-form-message\">{translate(language, 'message')}</label>\n      <textarea id=\"about-form-message\" name=\"message\" />\n\n      <button type=\"submit\">{translate(language, 'submit')}</button>\n    </form></>\n}","export function getOppositeLanguageUrl(path, currentLanguage) {\n  const newLanguage = currentLanguage === 'en' ? 'es' : 'en';\n  return path.replace(`/${currentLanguage}/`, `/${newLanguage}/`);\n}\n\nexport function getLanguageFromPath(path) {\n  return path ? path.split('/').filter(Boolean)[0] ?? 'en' : 'en';\n}","import * as React from \"react\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport { Link } from \"gatsby\"\nimport { getOppositeLanguageUrl } from \"./languageHelpers\";\n\nconst PageHeader = ({ language, location }) => {\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n  return (\n    <header id=\"page-hader\">\n      <div className=\"container\">\n        <Link to={language === 'en' ? '/' : `/${language}/`}><img\n        id=\"header-logo\" src={`${__PATH_PREFIX__}/img/logo-header.svg`}\n            width={373}\n            height={38}\n            alt=\"Almotásim\"\n          /></Link>\n        <button id=\"burger-menu\" onClick={() => setIsMenuOpen(value => !value)}><img id=\"burger-button\" src={`${__PATH_PREFIX__}/img/burger-menu-white.svg`} /></button>\n        <nav id=\"site-navigation\" className={isMenuOpen ? 'menu-open' : undefined}>\n          <div className=\"container\">\n            {language === 'en' ?\n              <ul>\n                <li><Link to={`${__PATH_PREFIX__}/${language}/projects/`}>Projects</Link></li>\n                <li><Link to={`${__PATH_PREFIX__}/${language}/sketches/`}>Sketches</Link></li>\n                {/* <li><Link to={`${__PATH_PREFIX__}/${language}/texts/`}>Texts</Link></li> */}\n                <li><Link to={`${__PATH_PREFIX__}/${language}/about/`}>About</Link></li>\n                <li><Link to={getOppositeLanguageUrl(location.pathname, language)}>Español</Link></li>\n              </ul> : <ul>\n                <li><Link to={`${__PATH_PREFIX__}/${language}/projects/`}>Proyectos</Link></li>\n                <li><Link to={`${__PATH_PREFIX__}/${language}/sketches/`}>Bosquejos</Link></li>\n                {/* <li><Link to={`${__PATH_PREFIX__}/${language}/texts/`}>Textos</Link></li> */}\n                <li><Link to={`${__PATH_PREFIX__}/${language}/about/`}>Info</Link></li>\n                <li><Link to={getOppositeLanguageUrl(location.pathname, language)}>English</Link></li>\n              </ul>}\n          </div>\n        </nav>\n      </div>\n    </header>\n  )\n}\n\nexport default PageHeader;","import * as React from \"react\"\nimport PageHeader from \"./PageHeader\"\n// import { StaticImage } from \"gatsby-plugin-image\"\n// import { Link } from \"gatsby\"\n\n\nconst Layout = ({ location, title, children, language }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      {!isRootPath && <PageHeader location={location} language={language} />}\n      <main className=\"container\">{children}</main>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <meta name=\"robots\" content=\"none\"></meta>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n\n\n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin=\"anonymous\" />\n      <link href=\"https://fonts.googleapis.com/css2?family=Alegreya:ital,wght@0,400..900;1,400..900&family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap\" rel=\"stylesheet\"></link>\n      {/* <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-NJ2K2HFN1Y\"></script>\n      <script __>\n        window.dataLayer = window.dataLayer || [];\n        function gtag(){dataLayer.push(arguments);}\n        gtag('js', new Date());\n\n        gtag('config', 'G-NJ2K2HFN1Y');\n      </script> */}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../../components/layout\"\nimport Seo from \"../../components/seo\"\nimport { AboutForm } from \"../../components/AboutForm\"\nimport { getLanguageFromPath } from \"../../components/languageHelpers\"\n\nconst About = ({ data, location }) => {\n  const language = 'en'\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle} language={language}>\n      <header id=\"static-page-header\">\n        <h1>About Almotásim</h1>\n      </header>\n      <p><b>Almotásim</b> works exploring and creating digital art and communication. Current focus: digital cartography, creative code, data visualization, data-driven journalism, and art video games.</p>\n\n      <p><b>Almotásim</b> belongs to <a href=\"https://gabrielmerida.cl/\" target=\"_blank\">Gabriel Mérida</a>, a Chilean/Australian journalist and software engineer.</p>\n\n      <p>Contact me if:</p>\n\n      <ul>\n        <li>You're looking for someone to design and implement an innovative way to present your data</li>\n        <li>You have questions about anything related to my projects, sketches, writing, or interests</li>\n        <li>You're looking to collaborate on the topics mentioned</li>\n        <li>You want to say hello</li>\n\n      </ul>\n      <AboutForm language={language} />\n    </Layout >\n  )\n}\n\nexport default About\n\nexport const Head = () => <>\n  <meta name=\"referrer\" content=\"unsafe-url\" />\n  <Seo title=\"All posts\" />\n</>\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["translate","language","text","console","log","en","email","name","message","submit","es","AboutForm","_ref","React","action","method","htmlFor","id","type","getOppositeLanguageUrl","path","currentLanguage","newLanguage","replace","location","isMenuOpen","setIsMenuOpen","className","Link","to","src","width","height","alt","onClick","value","undefined","pathname","title","children","isRootPath","PageHeader","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","content","property","social","twitter","rel","href","crossOrigin","_data$site$siteMetada","data","siteTitle","Layout","target","Head","Seo"],"sourceRoot":""}