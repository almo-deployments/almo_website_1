{"version":3,"file":"component---src-templates-list-js-ecc509a02ef2c50b0e93.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/components/tagsList.js","webpack://gatsby-starter-blog/./src/templates/list.js"],"sourcesContent":["import * as React from \"react\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport { Link } from \"gatsby\"\n\nconst Header = () => {\n  return (\n    <header id=\"page-hader\">\n      <div className=\"container\">\n        <Link to=\"/\">\n          <img id=\"header-logo\" src={`${__PATH_PREFIX__}/img/logo-horizontal-inverse-filled.svg`}\n            width={373}\n            height={38}\n            alt=\"AlmotÃ¡sim\"\n          />\n        </Link>\n      </div>\n    </header>\n  )\n}\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      {!isRootPath && <Header location={location}/>}\n      <main className=\"container\">{children}</main>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <meta name=\"robots\" content=\"none\"></meta>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n\n\n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n      <link href=\"https://fonts.googleapis.com/css2?family=Alegreya+SC:ital,wght@0,400;0,500;0,700;0,800;0,900;1,400;1,500;1,700;1,800;1,900&family=Alegreya:ital,wght@0,400..900;1,400..900&display=swap\" rel=\"stylesheet\" />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\n\nconst TagsList = ({ tags, barBefore = false }) => {\n  const hasTags = tags && tags.length > 0;\n  if (!hasTags) return;\n  return (\n    <>\n      {barBefore && '|'}\n      {(tags ?? []).map(tag => <span className=\"tag\" key={tag}>#{tag.toUpperCase()}</span>)}\n    </>\n  )\n}\n\nexport default TagsList;\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport \"../queries/allMarkdowns\"\nimport TagsList from \"../components/tagsList\"\n\nfunction ListIntro({ contentType, language }) {\n  switch (language) {\n    case 'en':\n      switch (contentType) {\n        case 'texts':\n          return <><h1>Texts</h1><p>Some fleeting thoughts about the practice of digital media</p></>\n        case 'projects':\n          return <><h1>Projects</h1></>\n        case 'Sketches':\n          return <><h1>Sketches</h1><p>These experiments defend brevity and agility</p></>\n      }\n      break;\n    case 'es':\n      switch (contentType) {\n        case 'texts':\n          return <><h1>Textos</h1></>\n        case 'projects':\n          return <><h1>Projectos</h1></>\n        case 'Sketches':\n          return <><h1>Bosquejos</h1><p>Estos experimentos reivindican el juego y la levedad</p></>\n      }\n\n  }\n  return null;\n}\n\nconst List = ({ data, location, pageContext: { language, contentType } }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <header id=\"list-header\"><ListIntro {...{ contentType, language }} /></header>\n      <ol id=\"posts-list\">\n        {posts.filter(post => post.fields.language === language && post.fields.contentType === contentType).map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"urlx\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <div class=\"article-byline\"><TagsList tags={post.frontmatter.tags} /></div>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default List;\nexport const Head = () => <><Seo title=\"All posts\" /></>\nexport const pageQuery = graphql`\n{\n  site {\n    ...SiteInformationFragment\n  }\n  allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n    nodes {\n      ...MarkdownRemarkNodeFragment\n    }\n  }\n}\n`"],"names":["Header","React","id","className","Link","to","src","width","height","alt","_ref","location","title","children","isRootPath","pathname","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","rel","href","crossorigin","tags","barBefore","length","map","tag","key","toUpperCase","ListIntro","contentType","language","_ref2","_data$site$siteMetada","data","pageContext","siteTitle","posts","allMarkdownRemark","nodes","Layout","filter","post","fields","frontmatter","slug","itemScope","itemType","itemProp","class","TagsList","dangerouslySetInnerHTML","__html","excerpt","Head","Seo"],"sourceRoot":""}