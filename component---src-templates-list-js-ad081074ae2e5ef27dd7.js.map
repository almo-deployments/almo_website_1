{"version":3,"file":"component---src-templates-list-js-ad081074ae2e5ef27dd7.js","mappings":"yOASA,SAASA,EAASC,GAA6B,IAA5B,YAAEC,EAAW,SAAEC,GAAUF,EAC1C,OAAQE,GACN,IAAK,KACH,OAAQD,GACN,IAAK,QACH,OAAOE,EAAAA,cAAAA,EAAAA,SAAA,KAAEA,EAAAA,cAAA,UAAI,SAAUA,EAAAA,cAAA,SAAG,iEAC5B,IAAK,WACH,OAAOA,EAAAA,cAAAA,EAAAA,SAAA,KAAEA,EAAAA,cAAA,UAAI,YAAaA,EAAAA,cAAA,SAAG,8EAC/B,IAAK,WACH,OAAOA,EAAAA,cAAAA,EAAAA,SAAA,KAAEA,EAAAA,cAAA,UAAI,YAAaA,EAAAA,cAAA,SAAG,8GAEjC,MACF,IAAK,KACH,OAAQF,GACN,IAAK,QACH,OAAOE,EAAAA,cAAAA,EAAAA,SAAA,KAAEA,EAAAA,cAAA,UAAI,UAAWA,EAAAA,cAAA,SAAG,kEAC7B,IAAK,WACH,OAAOA,EAAAA,cAAAA,EAAAA,SAAA,KAAEA,EAAAA,cAAA,UAAI,aAAcA,EAAAA,cAAA,SAAG,qFAChC,IAAK,WACH,OAAOA,EAAAA,cAAAA,EAAAA,SAAA,KAAEA,EAAAA,cAAA,UAAI,aAAcA,EAAAA,cAAA,SAAG,wHAItC,OAAO,IACT,CAoDA,UAlDaC,IAAiE,IAADC,EAAA,IAA/D,KAAEC,EAAI,SAAEC,EAAUC,aAAa,SAAEN,EAAQ,YAAED,IAAeG,EACtE,MAAMK,GAAkC,QAAtBJ,EAAAC,EAAKI,KAAKC,oBAAY,IAAAN,OAAA,EAAtBA,EAAwBO,QAAS,QAC7CC,EAAQP,EAAKQ,kBAAkBC,MAErC,OACEZ,EAAAA,cAACa,EAAAA,EAAM,CAACT,SAAUA,EAAUK,MAAOH,EAAWP,SAAUA,GACtDC,EAAAA,cAAA,UAAQc,GAAG,eAAcd,EAAAA,cAACJ,EAAS,CAAOE,cAAaC,cACvDC,EAAAA,cAAA,MAAIc,GAAG,aAAaC,UAAU,QAC3BL,EAAMM,QAAOC,IAASA,EAAKC,YAAYC,QAAUF,EAAKG,OAAOrB,WAAaA,GAAYkB,EAAKG,OAAOtB,cAAgBA,IAAauB,KAAIJ,IAAS,IAADK,EAAAC,EAC1I,MAAMd,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKG,OAAOI,KAEpD,IAAIC,GAAcC,EAAAA,EAAAA,GAAuC,QAA/BJ,EAACL,EAAKC,YAAYS,qBAAa,IAAAL,GAAiB,QAAjBC,EAA9BD,EAAgCM,uBAAe,IAAAL,OAAjB,EAA9BA,EAAiDM,iBAE5E,OACE7B,EAAAA,cAAA,MAAI8B,IAAKb,EAAKG,OAAOI,MACnBxB,EAAAA,cAAA,WACEe,UAAU,iBACVgB,WAAS,EACTC,SAAS,6BAEThC,EAAAA,cAAA,cACEA,EAAAA,cAAA,UACEA,EAAAA,cAACiC,EAAAA,KAAI,CAACC,GAAIjB,EAAKG,OAAOI,KAAMW,SAAS,QACnCnC,EAAAA,cAAA,QAAMmC,SAAS,YAAY1B,KAG/BT,EAAAA,cAAA,WACEA,EAAAA,cAACiC,EAAAA,KAAI,CAACC,GAAIjB,EAAKG,OAAOI,KAAMW,SAAS,QACnCnC,EAAAA,cAACoC,EAAAA,EAAW,CAACC,MAAOZ,OAI1BzB,EAAAA,cAAA,eACEA,EAAAA,cAAA,KACEsC,wBAAyB,CACvBC,OAAQtB,EAAKC,YAAYsB,aAAevB,EAAKwB,SAE/CN,SAAS,iBAGbnC,EAAAA,cAAA,OAAKe,UAAU,kBAAiBf,EAAAA,cAAC0C,EAAAA,EAAQ,CAACC,KAAM1B,EAAKC,YAAYyB,SAEhE,KAIJ,EAKN,MAAMC,EAAOA,IAAM5C,EAAAA,cAAAA,EAAAA,SAAA,KAAEA,EAAAA,cAAC6C,EAAAA,EAAG,CAACpC,MAAM,c","sources":["webpack://gatsby-starter-blog/./src/templates/list.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport \"../queries/allFragments\"\nimport TagsList from \"../components/tagsList\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nfunction ListIntro({ contentType, language }) {\n  switch (language) {\n    case 'en':\n      switch (contentType) {\n        case 'texts':\n          return <><h1>Texts</h1><p>Thoughts about the practice and exploration of digital media</p></>\n        case 'projects':\n          return <><h1>Projects</h1><p>Highlights of work in the intersection of communication, art and software</p></>\n        case 'sketches':\n          return <><h1>Sketches</h1><p>These experiments &ldquo; lay claim to the essential qualities of all games: symmetry, arbitrary rules, tedium&rdquo;</p></>\n      }\n      break;\n    case 'es':\n      switch (contentType) {\n        case 'texts':\n          return <><h1>Textos</h1><p>Ideas sobre la práctica y exploración de los medios digitales</p></>\n        case 'projects':\n          return <><h1>Proyectos</h1><p>Trabajos destacados en la intersección de la comunicación, el arte y el software</p></>\n        case 'sketches':\n          return <><h1>Bosquejos</h1><p>Estos experimentos &ldquo;reivindican los rasgos esenciales de todo juego: la simetría, las leyes arbitrarias, el tedio&rdquo;</p></>\n      }\n\n  }\n  return null;\n}\n\nconst List = ({ data, location, pageContext: { language, contentType } }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <Layout location={location} title={siteTitle} language={language}>\n      <header id=\"list-header\"><ListIntro {...{ contentType, language }} /></header>\n      <ol id=\"posts-list\" className=\"grid\">\n        {posts.filter(post => !post.frontmatter.hidden && post.fields.language === language && post.fields.contentType === contentType).map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          let featuredImg = getImage(post.frontmatter.featuredImage?.childImageSharp?.gatsbyImageData)\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"urlx\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <div>\n                    <Link to={post.fields.slug} itemProp=\"urlx\">\n                      <GatsbyImage image={featuredImg} />\n                    </Link>\n                  </div>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n                <div className=\"article-byline\"><TagsList tags={post.frontmatter.tags} /></div>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default List;\nexport const Head = () => <><Seo title=\"All posts\" /></>\nexport const pageQuery = graphql`\n{\n  site {\n    ...SiteInformationFragment\n  }\n  allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n    nodes {\n      ...MarkdownRemarkNodeFragment\n    }\n  }\n}\n`"],"names":["ListIntro","_ref","contentType","language","React","_ref2","_data$site$siteMetada","data","location","pageContext","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","Layout","id","className","filter","post","frontmatter","hidden","fields","map","_post$frontmatter$fea","_post$frontmatter$fea2","slug","featuredImg","getImage","featuredImage","childImageSharp","gatsbyImageData","key","itemScope","itemType","Link","to","itemProp","GatsbyImage","image","dangerouslySetInnerHTML","__html","description","excerpt","TagsList","tags","Head","Seo"],"sourceRoot":""}