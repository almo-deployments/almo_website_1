{"version":3,"file":"component---src-pages-using-typescript-tsx-c69bf25116b55dd16ce1.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./src/components/getOppositeLanguageUrl.js","webpack://gatsby-starter-blog/./src/components/PageHeader.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","export function getOppositeLanguageUrl(path, currentLanguage) {\n  const newLanguage = currentLanguage === 'en' ? 'es' : 'en';\n  return path.replace(`/${currentLanguage}/`, `/${newLanguage}/`);\n}","import * as React from \"react\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport { Link } from \"gatsby\"\nimport { getOppositeLanguageUrl } from \"./getOppositeLanguageUrl\";\n\nconst PageHeader = ({ language, location }) => {\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n  return (\n    <header id=\"page-hader\">\n      <div className=\"container\">\n        <Link to={language === 'en' ? '/' : `/${language}/`}>\n          <img id=\"header-logo\" src={`${__PATH_PREFIX__}/img/logo-horizontal-inverse-filled.svg`}\n            width={373}\n            height={38}\n            alt=\"Almotásim\"\n          />\n        </Link>\n        <button id=\"burger-menu\" onClick={() => setIsMenuOpen(value => !value)}><img id=\"burger-button\" src={`${__PATH_PREFIX__}/img/burger-menu-white.svg`} /></button>\n        <nav id=\"site-navigation\" className={isMenuOpen ? 'menu-open' : undefined}>\n          <div className=\"container\">\n            {language === 'en' ?\n              <ul>\n                <li><Link to={`${__PATH_PREFIX__}/${language}/projects/`}>Projects</Link></li>\n                <li><Link to={`${__PATH_PREFIX__}/${language}/sketches/`}>Sketches</Link></li>\n                <li><Link to={`${__PATH_PREFIX__}/${language}/texts/`}>Texts</Link></li>\n                <li><Link to={`${__PATH_PREFIX__}/${language}/about/`}>About</Link></li>\n                <li><Link to={getOppositeLanguageUrl(location.pathname, language)}>Español</Link></li>\n              </ul> : <ul>\n                <li><Link to={`${__PATH_PREFIX__}/${language}/projects/`}>Proyectos</Link></li>\n                <li><Link to={`${__PATH_PREFIX__}/${language}/sketches/`}>Bosquejos</Link></li>\n                <li><Link to={`${__PATH_PREFIX__}/${language}/texts/`}>Textos</Link></li>\n                <li><Link to={`${__PATH_PREFIX__}/${language}/about/`}>Info</Link></li>\n                <li><Link to={getOppositeLanguageUrl(location.pathname, language)}>English</Link></li>\n              </ul>}\n          </div>\n        </nav>\n      </div>\n    </header>\n  )\n}\n\nexport default PageHeader;","import * as React from \"react\"\nimport PageHeader from \"./PageHeader\"\n// import { StaticImage } from \"gatsby-plugin-image\"\n// import { Link } from \"gatsby\"\n\n\nconst Layout = ({ location, title, children, language }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      {!isRootPath && <PageHeader location={location} language={language} />}\n      <main className=\"container\">{children}</main>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <meta name=\"robots\" content=\"none\"></meta>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n\n\n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin=\"anonymous\" />\n      <link href=\"https://fonts.googleapis.com/css2?family=Alegreya+SC:ital,wght@0,400;0,500;0,700;0,800;0,900;1,400;1,500;1,700;1,800;1,900&family=Alegreya:ital,wght@0,400..900;1,400..900&display=swap\" rel=\"stylesheet\" />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","path","location","Layout","site","buildTime","href","Link","to","getOppositeLanguageUrl","currentLanguage","newLanguage","replace","language","isMenuOpen","setIsMenuOpen","id","className","src","width","height","alt","onClick","value","undefined","pathname","children","isRootPath","PageHeader","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","rel","crossOrigin"],"sourceRoot":""}