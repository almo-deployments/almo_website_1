{"version":3,"file":"component---src-pages-en-index-js-3bf7c29691217be3d30d.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/home.js","webpack://gatsby-starter-blog/./src/components/languageHelpers.js","webpack://gatsby-starter-blog/./src/components/PageHeader.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/en/index.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Home = ({ data, location, language }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const [isTextShown, setIsTextShown] = React.useState(false);\n  const showText = React.useCallback(() => { setIsTextShown(true); }, []);\n  const switchText = React.useCallback(() => { setIsTextShown(d => !d); }, []);\n\n  return (\n    <main id=\"homepage\" className={isTextShown ? 'text-shown' : ''}>\n      <img id=\"home-logo\" src=\"/img/logo.svg\" width={430}\n        height={320}\n        onClick={switchText}\n        alt={siteTitle}\n      />\n      <section id=\"home-text\">\n        <p><b>Almot치sim</b> is a studio focused on software, art and digital communication.</p>\n        <ul>\n          <li><Link to={`/${language}/projects/`}>Projects</Link></li>\n          <li><Link to={`/${language}/sketches/`}>Sketches</Link></li>\n          <li><Link to={`/${language}/texts/`}>Texts</Link></li>\n          <li><Link to={`/${language}/about/`}>About</Link></li>\n          {language === \"en\" \n            ? <li><Link to=\"es/\">Espa침ol</Link></li>\n            : <li><Link to=\"/\">English</Link></li>\n            }\n        </ul>\n      </section>\n    </main>\n  )\n}\n\nexport default Home;\n","export function getOppositeLanguageUrl(path, currentLanguage) {\n  const newLanguage = currentLanguage === 'en' ? 'es' : 'en';\n  return path.replace(`/${currentLanguage}/`, `/${newLanguage}/`);\n}\n\nexport function getLanguageFromPath(path) {\n  return path ? path.split('/').filter(Boolean)[0] ?? 'en' : 'en';\n}","import * as React from \"react\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport { Link } from \"gatsby\"\nimport { getOppositeLanguageUrl } from \"./languageHelpers\";\n\nconst PageHeader = ({ language, location }) => {\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n  return (\n    <header id=\"page-hader\">\n      <div className=\"container\">\n        <Link to={language === 'en' ? '/' : `/${language}/`}><img\n        id=\"header-logo\" src={`${__PATH_PREFIX__}/img/logo-horizontal-inverse-filled.svg`}\n            width={373}\n            height={38}\n            alt=\"Almot치sim\"\n          /></Link>\n        <button id=\"burger-menu\" onClick={() => setIsMenuOpen(value => !value)}><img id=\"burger-button\" src={`${__PATH_PREFIX__}/img/burger-menu-white.svg`} /></button>\n        <nav id=\"site-navigation\" className={isMenuOpen ? 'menu-open' : undefined}>\n          <div className=\"container\">\n            {language === 'en' ?\n              <ul>\n                <li><Link to={`${__PATH_PREFIX__}/${language}/projects/`}>Projects</Link></li>\n                <li><Link to={`${__PATH_PREFIX__}/${language}/sketches/`}>Sketches</Link></li>\n                <li><Link to={`${__PATH_PREFIX__}/${language}/texts/`}>Texts</Link></li>\n                <li><Link to={`${__PATH_PREFIX__}/${language}/about/`}>About</Link></li>\n                <li><Link to={getOppositeLanguageUrl(location.pathname, language)}>Espa침ol</Link></li>\n              </ul> : <ul>\n                <li><Link to={`${__PATH_PREFIX__}/${language}/projects/`}>Proyectos</Link></li>\n                <li><Link to={`${__PATH_PREFIX__}/${language}/sketches/`}>Bosquejos</Link></li>\n                <li><Link to={`${__PATH_PREFIX__}/${language}/texts/`}>Textos</Link></li>\n                <li><Link to={`${__PATH_PREFIX__}/${language}/about/`}>Info</Link></li>\n                <li><Link to={getOppositeLanguageUrl(location.pathname, language)}>English</Link></li>\n              </ul>}\n          </div>\n        </nav>\n      </div>\n    </header>\n  )\n}\n\nexport default PageHeader;","import * as React from \"react\"\nimport PageHeader from \"./PageHeader\"\n// import { StaticImage } from \"gatsby-plugin-image\"\n// import { Link } from \"gatsby\"\n\n\nconst Layout = ({ location, title, children, language }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      {!isRootPath && <PageHeader location={location} language={language} />}\n      <main className=\"container\">{children}</main>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <meta name=\"robots\" content=\"none\"></meta>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n\n\n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin=\"anonymous\" />\n      <link href=\"https://fonts.googleapis.com/css2?family=Alegreya:ital,wght@0,400..900;1,400..900&family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap\" rel=\"stylesheet\"></link>\n      {/* <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-NJ2K2HFN1Y\"></script>\n      <script __>\n        window.dataLayer = window.dataLayer || [];\n        function gtag(){dataLayer.push(arguments);}\n        gtag('js', new Date());\n\n        gtag('config', 'G-NJ2K2HFN1Y');\n      </script> */}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../../components/layout\"\nimport Seo from \"../../components/seo\"\nimport Home from \"../../components/home\"\n\nconst EsIndex = ({ data, location }) => {\n  return <Home data={data} location={location} language=\"es\" />;\n}\n\nexport default EsIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <>\n  <Seo title=\"All posts\" />\n  <html lang=\"en\" id=\"almo-homepage\" />\n</>\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["_ref","_data$site$siteMetada","data","location","language","siteTitle","site","siteMetadata","title","isTextShown","setIsTextShown","React","switchText","d","id","className","src","width","height","onClick","alt","Link","to","getOppositeLanguageUrl","path","currentLanguage","newLanguage","replace","isMenuOpen","setIsMenuOpen","value","undefined","pathname","children","isRootPath","PageHeader","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","useStaticQuery","metaDescription","defaultTitle","name","content","property","social","twitter","rel","href","crossOrigin","Home","Head","Seo","lang"],"sourceRoot":""}